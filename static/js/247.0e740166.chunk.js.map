{"version":3,"file":"static/js/247.0e740166.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActor } from 'services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const defaultImg =\n    'https://t3.ftcdn.net/jpg/00/64/67/80/360_F_64678017_zUpiZFjj04cnLri7oADnyMH0XBYyQghG.jpg';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async () => {\n      setLoading(true);\n      try {\n        const cast = await fetchActor(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <h1>Cast of the movie!</h1>\n      {cast &&\n        cast.map(({ id, name, profile_path }) => (\n          <div key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : defaultImg\n              }\n              width={150}\n              alt=\"poster\"\n            />\n\n            <h2>{name}</h2>\n          </div>\n        ))}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '6be9aea73575a40cd7daafca7fef73e1';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","movieId","useParams","useEffect","details","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_cast","_context","prev","next","fetchActor","sent","t0","console","log","message","finish","stop","apply","arguments","_jsxs","Container","children","_jsx","Loader","map","_ref2","id","name","profile_path","src","concat","width","alt","instance","axios","baseURL","params","api_key","fetchTrendMovies","_yield$instance$get","data","get","abrupt","fetchSerchMovies","_callee2","query","_yield$instance$get2","_context2","_x","fetchAllDetails","_ref3","_callee3","_yield$instance$get3","_context3","_x2","_ref4","_callee4","_yield$instance$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$instance$get5","_context5","results","_x4"],"sourceRoot":""}